type shapeType =  Rect | RoundedRect | Ellipse | Edge;
interface Renderable {
  input align : string @ 0;
  input bgColor : color @ 1;
  input bold : bool = false @ 2;
  input borderWidth : int = 0 @ 3;
  input borderColor : color @ 4;
  input clipsSelf : bool = false @ 5;
  input clipsChildren : bool = false @ 6;
  input cornerxRadius : int = 0 @ 7;
  input corneryRadius : int = 0 @ 8;
  input font : string = "Verdana" @ 9;
  input fontSize : int = 12 @ 10;
  input image : string = "" @ 11;
  input italic : bool = false @ 12;
  input lgradPCs : string = "" @ 13;
  input lgradStart : string = "" @ 14;
  input lgradStop : string = "" @ 15;
  input opacity : float = 0.5 @ 16;
  input rgradCenter : string = "" @ 17;
  input rgradFP : string = "" @ 18;
  input rgradPCs : string = "" @ 19;
  input rgradRadius : string = "" @ 20;
  input shape : shapeType = rect @ 21;
  input textColor : color @ 22;
  input textWeight : int = 1 @ 23;
  input underline : bool = false @ 24;
  input visible : bool = true @ 25;
  input z : int = 1 @ 26;
}

interface Top {
  var myx : int;
  var myy : int;
  var myh : int;
  var myw : int;

  input align : string @ 0;
  input bgColor : color @ 1;
  input bold : bool = false @ 2;
  input borderWidth : int = 0 @ 3;
  input borderColor : color @ 4;
  input clipsSelf : bool = false @ 5;
  input clipsChildren : bool = false @ 6;
  input cornerxRadius : int = 0 @ 7;
  input corneryRadius : int = 0 @ 8;
  input font : string = "Verdana" @ 9;
  input fontSize : int = 12 @ 10;
  input image : string = "" @ 11;
  input italic : bool = false @ 12;
  input lgradPCs : string = "" @ 13;
  input lgradStart : string = "" @ 14;
  input lgradStop : string = "" @ 15;
  input opacity : float = 0.5 @ 16;
  input rgradCenter : string = "" @ 17;
  input rgradFP : string = "" @ 18;
  input rgradPCs : string = "" @ 19;
  input rgradRadius : string = "" @ 20;
  input shape : shapeType = rect @ 21;
  input textColor : color @ 22;
  input textWeight : int = 1 @ 23;
  
  input underline : bool = false @ 24;
  input visible : bool = true @ 25;
  input z : int = 1 @ 26;
 }

interface Node {
  var x : int;
  var y : int;
  var h : int;
  var w : int;

  input align : string @ 0;
  input bgColor : color @ 1;
  input bold : bool = false @ 2;
  input borderWidth : int = 0 @ 3;
  input borderColor : color @ 4;
  input clipsSelf : bool = false @ 5;
  input clipsChildren : bool = false @ 6;
  input cornerxRadius : int = 0 @ 7;
  input corneryRadius : int = 0 @ 8;
  input font : string = "Verdana" @ 9;
  input fontSize : int = 12 @ 10;
  input image : string = "" @ 11;
  input italic : bool = false @ 12;
  input lgradPCs : string = "" @ 13;
  input lgradStart : string = "" @ 14;
  input lgradStop : string = "" @ 15;
  input opacity : float = 0.5 @ 16;
  input rgradCenter : string = "" @ 17;
  input rgradFP : string = "" @ 18;
  input rgradPCs : string = "" @ 19;
  input rgradRadius : string = "" @ 20;
  input shape : shapeType = rect @ 21;
  input textColor : color @ 22;
  input textWeight : int = 1 @ 23;
  
  input underline : bool = false @ 24;
  input visible : bool = true @ 25;
  input z : int = 1 @ 26;
}

class TopBox : Top {
  
  children { root : Node; }
  
  attributes { 
    input fx : int;
    input fy : int;
  }
  
  actions {
    myx := fx;
    myy := fy;
    root.x := myx;
    root.y := myy;
    myh := root.h;
    myw := root.w;
  }
}   

class VBox : Node {
  attributes {
    var temph : int;
  }
  
  children {
    child1 : Node;
    child2 : Node;
  }
  
  actions {
    child1.x := x;
    child2.x := x;
    child1.y := y;
    temph := y + child1.h;
    child2.y := temph;
    h := child1.h + child2.h;
    w := child1.w < child2.w ? child2.w : child1.w;    
  }

}


class HBox : Node {
  children {
    child1 : Node;
    child2 : Node;
  }
  
  actions {
    child1.x := x;
    child2.y := y;
    child1.y := y;
    child2.x :=  x + child1.w;
    w := child1.w + child2.w;
    h := child1.h < child2.h ? child2.h : child1.h;
  }

}

class LeafBox : Node {
  attributes {
    input fh : int;
    input fw : int;
  }
  
  actions {
    h := fh;
    w := fw;
  }
}